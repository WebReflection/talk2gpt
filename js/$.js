/* @see https://github.com/WebReflection/handy-wrap#readme */
/*! (c) Andrea Giammarchi - ISC */
const{iterator:e}=Symbol,t={get({_:t,$:r},n,l){switch(n){case e:return r[e].bind(r);case"emit":return(e,...t)=>{for(let n=0;n<r.length;n++)r[n].dispatchEvent(new Event(e,...t));return l};case"length":return t?r.at(0)?.length:r.length;case"valueOf":return()=>t?r.at(0):r;case"on":n="addEventListener";default:{let e;for(let o=0;o<r.length;o++)if(o)e[o]=r[o][n];else{if(e=r[o][n],"function"==typeof e)return(...e)=>{for(let t=0;t<r.length;t++)r[t][n](...e);return l};if(t)return e;e=[e]}return e}}},set({$:e},t,r){for(let n=0;n<e.length;n++)e[n][t]=r;return!0}},r=(e,t,r=document)=>"string"==typeof e?r[t](e):e.valueOf(),n=(e,n)=>new Proxy({_:1,$:[r(e,"querySelector",n)]},t),l=(e,n)=>new Proxy({_:0,$:r(e,"querySelectorAll",n)},t);export{n as $,l as $$};
